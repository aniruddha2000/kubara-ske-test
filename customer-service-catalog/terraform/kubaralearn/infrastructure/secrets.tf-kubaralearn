provider "vault" {
  alias            = "secondary"
  address          = "https://prod.sm.eu01.stackit.cloud"
  skip_child_token = true

  auth_login_userpass {
    # It's best to store the access data in a Terraform env variable and reference it here, but in this example, we're getting it from a Terraform module.
    username = module.secretsmanager.vault_user_rw_name
    password = module.secretsmanager.vault_user_rw_password
  }
}

variable "image_pull_secret" {}
variable "oauth2_client_secret" {
  type        = string
  description = "Client Secret for connecting the \"landing page\" Oauth2 App and configuring Oauth2 Proxy"
}
variable "oauth2_client_id" {
  type        = string
  description = "Client ID for connecting the \"landing page\" Oauth2 App and configuring Oauth2 Proxy"
}
variable "argo_oauth2_client_secret" {
  type        = string
  description = "Client Secret for connecting the ArgoCD Oauth2 App"
}
variable "argo_oauth2_client_id" {
  type        = string
  description = "Client ID for connecting the ArgoCD Oauth2 App"
}
variable "grafana_oauth2_client_secret" {
  type        = string
  description = "Client Secret for connecting the Grafana Oauth2 App"
}
variable "grafana_oauth2_client_id" {
  type        = string
  description = "Client ID for connecting the Grafana Oauth2 App"
}

# Secrets for image pull secret
resource "vault_kv_secret_v2" "image_pull_secret" {
  mount = module.secretsmanager.instance_id #"<your_vault_instance_id>", in this example it comes from a TF module, but you can also just place your instance ID here
  name  = "docker_config"
  data_json = jsonencode({
    pull-secret = base64decode(var.image_pull_secret)
  })
}

# Valid 32 Byte Base64 URL encoding set that will decode to 24 []byte AES-192 secret
resource "random_password" "oauth2_cookie_secret" {
  length           = 32
  override_special = "-_"
}

# Secrets for connecting the "landing page" Oauth2 App and configuring Oauth2 Proxy
resource "vault_kv_secret_v2" "oauth2_creds" {
  mount = module.secretsmanager.instance_id #"<your_vault_instance_id>", in this example it comes from a TF module, but you can also just place your instance ID here
  name  = "oauth2_credentials"
  data_json = jsonencode({
    cookie-secret = random_password.oauth2_cookie_secret.result
    client-secret = var.oauth2_client_secret
    client-id     = var.oauth2_client_id
  })
}

# Secrets for connecting ArgoCD Oauth2 App
resource "vault_kv_secret_v2" "argo_oauth2_creds" {
  mount = module.secretsmanager.instance_id #"<your_vault_instance_id>", in this example it comes from a TF module, but you can also just place your instance ID here
  name  = "argo_oauth2_credentials"
  data_json = jsonencode({
    client-secret = var.argo_oauth2_client_secret
    client-id     = var.argo_oauth2_client_id
  })
}

# Secrets for connecting Grafana Oauth2 App
resource "vault_kv_secret_v2" "grafana_oauth2_creds" {
  mount = module.secretsmanager.instance_id #"<your_vault_instance_id>", in this example it comes from a TF module, but you can also just place your instance ID here
  name  = "grafana_oauth2_credentials"
  data_json = jsonencode({
    client-secret = var.grafana_oauth2_client_secret
    client-id     = var.grafana_oauth2_client_id
  })
}
