promtail:
  config:
    clients:
      - url: http://loki:3100/loki/api/v1/push
  resources:
    requests:
      cpu: 30m
      memory: 100Mi
    limits:
      memory: 100Mi
  podSecurityContext:
    runAsUser: 0
    runAsGroup: 0
    seccompProfile:
      type: RuntimeDefault
  containerSecurityContext:
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
loki:
  # the loki.storage.bucketNames.chunks value is only added because of a templating bug in loki; actual value should be set as loki.loki.storage.bucketNames.chunks
  monitoring:
    serviceMonitor:
      enabled: false
      labels:
        monitoring.instance: changeme
  storage:
    bucketNames:
      chunks: changeme
  test:
    enabled: false
  gateway:
    enabled: false  # for the canary
  ingress:
    enabled: false
    ingressClassName: nginx
  read:
    extraArgs:
      - '-config.expand-env=true'
    extraEnv:
      - name: S3_SECRET_KEY
        valueFrom:
          secretKeyRef:
            name: loki-secrets
            key: secret-key-storage
      - name: S3_ACCESS_KEY_ID
        valueFrom:
          secretKeyRef:
            name: loki-secrets
            key: access-key-id-storage
  write:
    extraArgs:
      - '-config.expand-env=true'
    extraEnv:
      - name: S3_SECRET_KEY
        valueFrom:
          secretKeyRef:
            name: loki-secrets
            key: secret-key-storage
      - name: S3_ACCESS_KEY_ID
        valueFrom:
          secretKeyRef:
            name: loki-secrets
            key: access-key-id-storage
  backend:
    extraArgs:
      - '-config.expand-env=true'
    extraEnv:
      - name: S3_SECRET_KEY
        valueFrom:
          secretKeyRef:
            name: loki-secrets
            key: secret-key-storage
      - name: S3_ACCESS_KEY_ID
        valueFrom:
          secretKeyRef:
            name: loki-secrets
            key: access-key-id-storage
  global:
    dnsService: kube-dns
  deploymentMode: SimpleScalable
  loki:
    podSecurityContext:
      fsGroup: 10001
      runAsGroup: 10001
      runAsNonRoot: true
      runAsUser: 10001
      seccompProfile:
        type: RuntimeDefault
    containerSecurityContext:
      privileged: false
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
    useTestSchema: true
    analytics:
      reporting_enabled: false
    storage:
      type: s3
      bucketNames:
        chunks: changeme
        ruler: changeme
        admin: changeme
      s3:
        s3: s3://  # Important to make s3-compatible storage like StackIT work
        endpoint: changeme
        region: eu01
        accessKeyId: ${S3_ACCESS_KEY_ID}
        secretAccessKey: ${S3_SECRET_KEY}
        s3ForcePathStyle: true
        http_config:
          insecure_skip_verify: true
    storage_config:
      boltdb_shipper:
        active_index_directory: /var/loki/boltdb-shipper-active
        cache_location: /var/loki/boltdb-shipper-cache
      tsdb_shipper:
        active_index_directory: /var/loki/tsdb-index
        cache_location: /var/loki/tsdb-cache
  chunksCache:
    enabled: false
  resultsCache:
    enabled: false
  singleBinary:
    resources:
      requests:
        cpu: 10m
        memory: 300Mi
      limits:
        memory: 300Mi
  lokiCanary:
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
      limits:
        memory: 100Mi
  sidecar:
    resources:
      requests:
        cpu: 10m
        memory: 150Mi
      limits:
        memory: 150Mi
namespace: {}
