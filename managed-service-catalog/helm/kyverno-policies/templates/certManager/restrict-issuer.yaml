{{- if and .Values.bestPractices.enabled (dig "certManager" "restrictIssuer" "enabled" true (merge .Values)) }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: cert-manager-restrict-issuer
  annotations:
    pod-policies.kyverno.io/autogen-controllers: none
    policies.kyverno.io/title: Restrict issuer
    policies.kyverno.io/category: Cert-Manager
    policies.kyverno.io/severity: medium
    policies.kyverno.io/minversion: "1.6.0"
    kyverno.io/kyverno-version: {{ .Values.global.kyvernoVersion | quote }}
    kyverno.io/kubernetes-version: {{ .Values.global.k8sVersion | quote }}
    policies.kyverno.io/subject: Certificate
    policies.kyverno.io/description: >-
      Certificates for trusted domains should always be steered to a controlled issuer to
      ensure the chain of trust is appropriate for that application. Users may otherwise be
      able to create their own issuers and sign certificates for other domains. This policy
      ensures that a certificate request for a specific domain uses a designated ClusterIssuer.
spec:
  webhookConfiguration:
    failurePolicy: {{ dig "certManager" "restrictIssuer" "webhookFailurePolicy" "Fail" (merge .Values) }}
    timeoutSeconds: 30
  background: {{ dig "certManager" "restrictIssuer" "enableBackgroundScanning" true (merge .Values)}}
  rules:
    - name: restrict-corp-cert-issuer
      match:
        any:
        - resources:
            kinds:
            - Certificate
      skipBackgroundRequests: true
      validate:
        allowExistingViolations: true
        failureAction: {{ dig "certManager" "restrictIssuer" "actionOverride" "Audit" (merge .Values)}}
        message: When requesting a cert for this domain, you must use our corporate issuer.
        pattern:
          spec:
            (dnsNames): [{{ .Values.global.allowedIssuerDomains | quote }}]
            issuerRef:
              name: our-corp-issuer
              kind: ClusterIssuer
              group: cert-manager.io
{{- end }}
