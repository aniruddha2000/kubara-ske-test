{{- if and .Values.bestPractices.enabled (dig "certManager" "limitDuration" "enabled" true (merge .Values)) }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: cert-manager-limit-duration
  annotations:
    pod-policies.kyverno.io/autogen-controllers: none
    policies.kyverno.io/title: Certificate max duration 100 days
    policies.kyverno.io/category: Cert-Manager
    policies.kyverno.io/severity: medium
    policies.kyverno.io/minversion: 1.6.0
    kyverno.io/kyverno-version: {{ .Values.global.kyvernoVersion | quote }}
    kyverno.io/kubernetes-version: {{ .Values.global.k8sVersion | quote }}
    policies.kyverno.io/subject: Certificate
    policies.kyverno.io/description: >-
      Kubernetes managed non-letsencrypt certificates have to be renewed in every 100 days.
spec:
  webhookConfiguration:
    failurePolicy: {{ dig "certManager" "limitDuration" "webhookFailurePolicy" "Fail" (merge .Values) }}
    timeoutSeconds: 30
  background: {{ dig "certManager" "limitDuration" "enableBackgroundScanning" false (merge .Values)}}
  rules:
    - name: certificate-duration-max-100days
      match:
        any:
          - resources:
              kinds:
                - Certificate
      preconditions:
        all:
          - key: {{`"{{ contains(request.object.spec.issuerRef.name, 'letsencrypt') }}"`}}
            operator: Equals
            value: False
          - key: {{`"{{ request.object.spec.duration || ''}}"`}}
            operator: NotEquals
            value: ""
      skipBackgroundRequests: true
      {{- with index .Values "kyverno-policies" "policyExclude" "certificate-duration-max-100days" }}
      exclude:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      validate:
        allowExistingViolations: true
        failureAction: {{ dig "certManager" "limitDuration" "actionOverride" "Audit" (merge .Values)}}
        message: "certificate duration must be < than 2400h (100 days)"
        deny:
          conditions:
            all:
              - key: {{ `"{{ max( [ to_number(regex_replace_all('h.*',request.object.spec.duration,'')), to_number('2400') ] ) }}"` }}
                operator: NotEquals
                value: 2400
{{- end }}
