{{- if and .Values.itGrundschutz.standard.enabled  (dig "itGrundschutz" "standard" "createDefaultNetworkPolicyExistingNamespaces" "enabled" true (merge .Values)) }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: create-default-network-policy-existing-namespaces
  annotations:
    pod-policies.kyverno.io/autogen-controllers: none
    policies.kyverno.io/title: Create default-deny network policy for existing namespaces
    policies.kyverno.io/category: IT-Grundschutz (standard)
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Namespace, NetworkPolicy
    kyverno.io/kyverno-version: {{ .Values.global.kyvernoVersion | quote }}
    policies.kyverno.io/minversion: "1.6.0"
    kyverno.io/kubernetes-version: {{ .Values.global.k8sVersion | quote }}
    policies.kyverno.io/description: >-
      A NetworkPolicy is often a critical piece when provisioning new Namespaces,
      but there may be existing Namespaces which also need the same resource. Creating
      each one individually or manipulating each Namespace in order to trigger creation
      is additional overhead. This policy creates a new NetworkPolicy for existing
      Namespaces which results in a default deny behavior and labels it with created-by=kyverno.
spec:
  webhookConfiguration:
    failurePolicy: {{ dig "itGrundschutz" "standard" "createDefaultNetworkPolicyExistingNamespaces" "webhookFailurePolicy" "Fail" (merge .Values) }}
    timeoutSeconds: 30
  background: {{ dig "itGrundschutz" "standard" "createDefaultNetworkPolicyExistingNamespaces" "enableBackgroundScanning" true (merge .Values)}}
  generateExisting: true
  rules:
    - name: create-default-deny-netpol-existing-ns
      skipBackgroundRequests: true
      match:
        any:
          - resources:
              kinds:
                - Namespace
      generate:
        kind: NetworkPolicy
        apiVersion: networking.k8s.io/v1
        name: default-deny
        namespace: "{{`{{request.object.metadata.name}}`}}"
        synchronize: true
        data:
          metadata:
            labels:
              created-by: kyverno
          spec:
            podSelector: {}
            policyTypes:
              - Ingress
              - Egress
{{- end }}
