namespace: {}
externalSecrets: {}
defaultProject:
  name: default
  description: |-
    The default project is just here to validate your authentication.
    It is completely restricted and cannot be used to spawn any projects.
  clusterResourceBlacklist:
    - group: "*"
      kind: "*"
  clusterResourceWhitelist:
    - group: ""
      kind: ""
  destinations:
    - name: ""
      server: ""
  sourceRepos:
    - ""
argo-cd:
  createAggregateRoles: true
  notifications:
    enabled: false
  global:
    domain: changeme  # dns name of argocd has to be set here, such as argocd-iep-qa.schwarz
    env:
      - name: "TZ"
        value: "Europe/Berlin"
    pdb:
      enabled: false
      minAvailable: 1
    replicas: 1
  dex:
    enabled: true
    resources:
      requests:
        cpu: 50m
        memory: 150Mi
      limits:
        memory: 200Mi
    livenessProbe:
      enabled: true
    readinessProbe:
      enabled: true
  redis:
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        memory: 512Mi
    livenessProbe:
      enabled: true
    readinessProbe:
      enabled: true
  applicationSet:
    pdb:
      enabled: false
      minAvailable: 1
    replicas: 1
    metrics:
      enabled: false
    resources:
      requests:
        cpu: 256m
        memory: 500Mi
      limits:
        memory: 1000Mi
    livenessProbe:
      enabled: true
    readinessProbe:
      enabled: true
  server:
    replicas: 1
    pdb:
      enabled: false
      minAvailable: 1
    extraArgs:
      - --enable-gzip
    metrics:
      enabled: false
    serviceAccount:
      automountServiceAccountToken: true
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        memory: 1000Mi
  configs:
    cm:
      exec.enabled: false
      server.rbac.log.enforce.enable: true
      jsonnet.enable: false
      resource.respectRBAC: "normal"
      accounts.wizard: login, apiKey
      accounts.wizard.enabled: true
      admin.enabled: false
    rbac:
      create: true
      policy.default: "role:authenticated"
      policy.authenticated.csv: |
        p, role:authenticated, projects, get, default, allow
      policy.wizard.csv: |
        p, wizard, applications, *, *, allow
        p, wizard, applicationsets, *, *, allow
        p, wizard, certificates, *, *, deny
        p, wizard, clusters, *, *, allow
        p, wizard, repositories, *, *, allow
        p, wizard, write-repositories, *, *, deny
        p, wizard, projects, *, *, allow
        p, wizard, accounts, update, *, allow
        p, wizard, gpgkeys, *, *, deny
        p, wizard, exec, create, */*, allow
  repoServer:
    pdb:
      enabled: false
      minAvailable: 1
    resources:
      requests:
        cpu: 1500m
        memory: 2000Mi
      limits:
        memory: 2500Mi

  controller:
    resources:
      requests:
        cpu: 2000m
        memory: 2000Mi
      limits:
        memory: 2500Mi
    metrics:
      enabled: false
      serviceMonitor:
        enabled: false
        additionalLabels:
          monitoring.instance: changeme
      rules:
        enabled: false
        spec:
         - alert: ArgoAppMissing
           expr: |
             absent(argocd_app_info) == 1
           for: 15m
           labels:
             severity: critical
           annotations:
             summary: "[Argo CD] No reported applications"
             description: >
               Argo CD has not reported any applications data for the past 15 minutes which
               means that it must be down or not functioning properly.  This needs to be
               resolved for this cloud to continue to maintain state.
         - alert: ArgoAppNotSynced
           expr: |
             argocd_app_info{sync_status!="Synced"} == 1
           for: 12h
           labels:
             severity: warning
           annotations:
             summary: "[{{`{{$labels.name}}`}}] Application not synchronized"
             description: >
               The application [{{`{{$labels.name}}`}} has not been synchronized for over
               12 hours which means that the state of this cloud has drifted away from the
               state inside Git.
         - alert: ArgoAppUnhealthy
           expr: |
             argocd_app_info{health_status!="Healthy"} != 0
           for: 15m
           labels:
             severity: warning
           annotations:
             summary: "[{{`{{$labels.name}}`}}] Application not synchronized"
             description: >
               The application [{{`{{$labels.name}}`}} is currently not healthy.
